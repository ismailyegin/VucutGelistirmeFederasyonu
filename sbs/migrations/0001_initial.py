# Generated by Django 3.2.6 on 2022-03-22 15:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import sbs.services.services
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('logo', models.CharField(max_length=255)),
                ('lastlogin', models.DateTimeField()),
            ],
            options={
                'db_table': 'system_admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemAutoLogin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_secret_id', models.CharField(max_length=64)),
                ('user_secret_id', models.CharField(max_length=32)),
                ('target', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'system_auto_login',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysAdminauth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.IntegerField()),
                ('secret_id', models.CharField(max_length=9)),
                ('title', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'system_ebys_adminauth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysAthleteCoachAppend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_secret_id', models.CharField(max_length=32)),
                ('club_flightscholl_secret_id', models.CharField(max_length=32)),
                ('append_type', models.CharField(max_length=7)),
                ('append_user_secret_id', models.CharField(max_length=32)),
                ('append_date', models.DateField()),
                ('suspended_user_secret_id', models.CharField(max_length=32)),
                ('suspended_date', models.DateField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_athlete_coach_append',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysAuth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.IntegerField()),
                ('auth', models.CharField(max_length=6)),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'system_ebys_auth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysBranches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_id', models.CharField(max_length=10)),
                ('title', models.CharField(max_length=128)),
                ('sort', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_branches',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysBranchesSub',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_secret_id', models.CharField(max_length=32)),
                ('secret_id', models.CharField(max_length=32)),
                ('title', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'system_ebys_branches_sub',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysCity',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'system_ebys_city',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysCoaches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_id', models.CharField(max_length=32)),
                ('tckimlik', models.CharField(max_length=11)),
                ('namesurname', models.CharField(max_length=128)),
                ('birthday', models.CharField(max_length=10)),
                ('phone', models.CharField(max_length=14)),
                ('email', models.CharField(max_length=128)),
                ('address', models.TextField()),
                ('city', models.IntegerField()),
                ('iban', models.CharField(max_length=64)),
                ('branches', models.TextField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_coaches',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysCommonuser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_id', models.CharField(max_length=20)),
                ('profilephoto', models.CharField(max_length=128)),
                ('tckimlik', models.CharField(max_length=11)),
                ('id_verify', models.IntegerField(db_column='ID_verify')),
                ('passportnumber', models.CharField(max_length=128)),
                ('name', models.CharField(max_length=256)),
                ('surname', models.CharField(max_length=128)),
                ('birthday', models.DateField()),
                ('bloodgroup', models.CharField(max_length=10)),
                ('gender', models.CharField(max_length=5)),
                ('phone', models.CharField(max_length=32)),
                ('phone_verify', models.IntegerField()),
                ('email', models.CharField(max_length=128)),
                ('email_verify', models.IntegerField()),
                ('password', models.CharField(max_length=128)),
                ('address', models.TextField()),
                ('city', models.IntegerField()),
                ('iban', models.CharField(max_length=64)),
                ('user_type', models.CharField(max_length=128)),
                ('acildurum_kisi', models.CharField(max_length=64)),
                ('acildurum_phone', models.CharField(max_length=32)),
                ('heskodu', models.CharField(max_length=12)),
                ('ip', models.CharField(max_length=32)),
                ('useragent', models.TextField()),
                ('ebys_admin_auth', models.TextField()),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'system_ebys_commonuser',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysCompetition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_id', models.CharField(max_length=32)),
                ('category_secret', models.CharField(max_length=32)),
                ('title', models.CharField(max_length=256)),
                ('city', models.IntegerField()),
                ('start_date', models.CharField(max_length=10)),
                ('finish_date', models.CharField(max_length=10)),
                ('description', models.TextField()),
                ('creator', models.CharField(max_length=32)),
                ('created_date', models.DateTimeField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_competition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysEbysmodule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_id', models.CharField(max_length=32)),
                ('title', models.CharField(max_length=64)),
                ('icon', models.CharField(max_length=32)),
                ('link', models.CharField(max_length=64)),
                ('target', models.CharField(max_length=32)),
                ('sort', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_ebysmodule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysEducationseminar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_id', models.CharField(max_length=32)),
                ('city', models.CharField(max_length=16)),
                ('branch', models.CharField(max_length=16)),
                ('title', models.CharField(max_length=128)),
                ('start_date', models.CharField(max_length=128)),
                ('finish_date', models.CharField(max_length=128)),
                ('edu_time', models.CharField(max_length=128)),
                ('coaches', models.TextField()),
                ('description', models.TextField()),
                ('creator', models.CharField(max_length=32)),
                ('created_date', models.DateTimeField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_educationseminar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysEkipman',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_id', models.CharField(max_length=32)),
                ('equipment_type', models.CharField(max_length=24)),
                ('user_secret_id', models.CharField(max_length=32)),
                ('club_secret_id', models.CharField(max_length=32)),
                ('parasut_kanat_markasi', models.CharField(max_length=64)),
                ('parasut_kanat_modeli', models.CharField(max_length=64)),
                ('parasut_kanat_sinifi', models.CharField(max_length=64)),
                ('parasut_kanat_renk', models.CharField(max_length=64)),
                ('parasut_kanat_uretimyili', models.CharField(max_length=64)),
                ('parasut_harnes_marka', models.CharField(max_length=64)),
                ('parasut_harnes_model', models.CharField(max_length=64)),
                ('parasut_harnes_renk', models.CharField(max_length=64)),
                ('paramotor_marka', models.CharField(max_length=64)),
                ('paramotor_model', models.CharField(max_length=64)),
                ('paramotor_serino', models.CharField(max_length=64)),
                ('paramotor_nereden_satinalindi', models.IntegerField()),
                ('paramotor_firmakisi_bilgisi', models.CharField(max_length=64)),
                ('paramotor_satinalma_tarih', models.CharField(max_length=32)),
                ('drone_marka', models.CharField(max_length=128)),
                ('drone_model', models.CharField(max_length=128)),
                ('drone_renk', models.CharField(max_length=128)),
                ('drone_agirlik', models.CharField(max_length=128)),
                ('drone_serino', models.CharField(max_length=128)),
                ('drone_plaka', models.CharField(max_length=128)),
                ('date', models.DateField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_ekipman',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysEventApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_id', models.CharField(max_length=128)),
                ('user_secret_id', models.CharField(max_length=128)),
                ('year', models.CharField(max_length=4)),
                ('title', models.CharField(max_length=128)),
                ('provience', models.CharField(max_length=64)),
                ('start_date', models.DateField()),
                ('finish_date', models.DateField()),
                ('event_type', models.CharField(max_length=64)),
                ('submit_date', models.DateTimeField()),
                ('status_description', models.TextField()),
                ('status_changed_secret_id', models.CharField(max_length=128)),
                ('status_changed_date', models.DateTimeField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_event_application',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysEventJoin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_secret_id', models.CharField(max_length=32)),
                ('user_secret_id', models.CharField(max_length=32)),
                ('namesurname', models.CharField(max_length=256)),
                ('progress', models.IntegerField()),
                ('reserve_order', models.IntegerField()),
                ('description', models.TextField()),
                ('category', models.CharField(max_length=32)),
                ('subcategory', models.CharField(max_length=256)),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'system_ebys_event_join',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysEventOfficer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_secret_id', models.CharField(max_length=32)),
                ('user_secret_id', models.CharField(max_length=32)),
                ('name_surname', models.CharField(max_length=64)),
                ('referee_statu', models.CharField(max_length=64)),
                ('task', models.CharField(max_length=64)),
                ('added_secret_id', models.CharField(max_length=32)),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_event_officer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysFfsalonEtap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_secret_id', models.CharField(max_length=32)),
                ('etap_1', models.IntegerField()),
                ('etap_2', models.IntegerField()),
                ('etap_3', models.IntegerField()),
                ('etap_4', models.IntegerField()),
                ('sontur', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_ffsalon_etap',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysGeneralFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_id', models.CharField(max_length=256)),
                ('type', models.CharField(max_length=12)),
                ('user_secret_id', models.CharField(max_length=128)),
                ('title', models.CharField(max_length=256)),
                ('description', models.TextField()),
                ('file', models.CharField(max_length=256)),
                ('created_secret_id', models.CharField(max_length=256)),
                ('created_date', models.DateTimeField()),
                ('updated_secret_id', models.CharField(max_length=256)),
                ('updated_date', models.DateTimeField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_general_file',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysHedefEtap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_secret_id', models.CharField(max_length=32)),
                ('etap_1', models.IntegerField()),
                ('etap_2', models.IntegerField()),
                ('etap_3', models.IntegerField()),
                ('etap_4', models.IntegerField()),
                ('etap_5', models.IntegerField()),
                ('etap_6', models.IntegerField()),
                ('sontur', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_hedef_etap',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysHedefSampiyona',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=32)),
                ('user_secret_id', models.CharField(max_length=32)),
                ('namesurname', models.CharField(max_length=64)),
                ('cinsiyet', models.CharField(max_length=5)),
                ('puan', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_hedef_sampiyona',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysHedefSampiyonaKulup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=32)),
                ('club_secret_id', models.CharField(max_length=32)),
                ('kulup', models.CharField(max_length=64)),
                ('puan', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_hedef_sampiyona_kulup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysImacEtap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_secret_id', models.CharField(max_length=32)),
                ('etap_1', models.IntegerField()),
                ('etap_2', models.IntegerField()),
                ('etap_3', models.IntegerField()),
                ('etap_4', models.IntegerField()),
                ('sontur', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_imac_etap',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysKura',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_id', models.CharField(max_length=64)),
                ('event_secret_id', models.CharField(max_length=64)),
                ('user_secret_id', models.CharField(max_length=64)),
                ('cekilen_kura', models.TextField()),
                ('kura_status', models.IntegerField()),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'system_ebys_kura',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysKuraSonuclari',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_secret_id', models.CharField(max_length=64)),
                ('sportsman_secret_id', models.CharField(max_length=64)),
                ('category', models.CharField(max_length=64)),
                ('sort', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_kura_sonuclari',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysLoginauth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_id', models.CharField(max_length=32)),
                ('sms_auth', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'system_ebys_loginauth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysLoginPc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_secret_id', models.CharField(max_length=256)),
                ('login_date', models.DateTimeField()),
                ('login_secret_id', models.CharField(max_length=256)),
                ('ip', models.CharField(max_length=256)),
                ('ua', models.TextField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_login_pc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysMemberLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_id', models.CharField(max_length=32)),
                ('user_secret_id', models.CharField(max_length=64)),
                ('more_user_secret_id', models.TextField()),
                ('transaction', models.TextField()),
                ('batch_transaction', models.CharField(max_length=22)),
                ('server_ip', models.CharField(max_length=64)),
                ('server_ua', models.TextField()),
                ('server_as', models.CharField(max_length=256)),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'system_ebys_member_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysMembershipAthlete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_secret_id', models.CharField(max_length=128)),
                ('branch', models.TextField()),
                ('airtribune_id', models.CharField(max_length=128)),
                ('sporculisansno', models.CharField(max_length=128)),
                ('lisansgecerlilik', models.DateField()),
                ('lisansfoto', models.CharField(max_length=128)),
                ('kulup', models.CharField(max_length=128)),
                ('sigortasirketi', models.CharField(max_length=128)),
                ('sigortapolice', models.CharField(max_length=128)),
                ('egitimyer', models.CharField(max_length=256)),
                ('ucusatlayis', models.CharField(max_length=256)),
                ('basarilariniz', models.CharField(max_length=256)),
                ('son12ay', models.CharField(max_length=256)),
                ('toplamsorti', models.CharField(max_length=256)),
                ('sertifikaderece', models.CharField(max_length=256)),
                ('lisanslar', models.CharField(max_length=256)),
                ('boy', models.CharField(max_length=256)),
                ('kilo', models.CharField(max_length=256)),
                ('infolevel', models.IntegerField()),
                ('infostatus', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_membership_athlete',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysMembershipClub',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_secret_id', models.CharField(max_length=128)),
                ('branch', models.CharField(max_length=256)),
                ('kulupadi', models.CharField(max_length=256)),
                ('kulupyetkili', models.CharField(max_length=128)),
                ('kuluptelefon', models.CharField(max_length=128)),
                ('kulupeposta', models.CharField(max_length=256)),
                ('kulupadres', models.CharField(max_length=128)),
                ('kulupil', models.IntegerField()),
                ('infolevel', models.IntegerField()),
                ('infostatus', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_membership_club',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysMembershipCoach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_secret_id', models.CharField(max_length=128)),
                ('branch', models.CharField(max_length=256)),
                ('nufuscuzdani', models.CharField(max_length=128)),
                ('diploma', models.CharField(max_length=128)),
                ('sabikakaydi', models.CharField(max_length=128)),
                ('cezayazisi', models.CharField(max_length=128)),
                ('saglikbeyanformu', models.CharField(max_length=128)),
                ('antrenorbelgesi', models.CharField(max_length=128)),
                ('infolevel', models.IntegerField()),
                ('infostatus', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_membership_coach',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysMembershipFlightscholl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_secret_id', models.CharField(max_length=128)),
                ('branch', models.CharField(max_length=256)),
                ('kulupadi', models.CharField(max_length=256)),
                ('kulupyetkili', models.CharField(max_length=128)),
                ('kuluptelefon', models.CharField(max_length=128)),
                ('kulupeposta', models.CharField(max_length=256)),
                ('kulupadres', models.CharField(max_length=128)),
                ('kulupil', models.IntegerField()),
                ('infolevel', models.IntegerField()),
                ('infostatus', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_membership_flightscholl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysMembershipOrganizer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_secret_id', models.CharField(max_length=128)),
                ('branch', models.CharField(max_length=256)),
                ('firmaunvani', models.CharField(max_length=256)),
                ('firmayetkilisi', models.CharField(max_length=128)),
                ('firmavdaire', models.CharField(max_length=128)),
                ('firmavno', models.CharField(max_length=128)),
                ('firmatelefon', models.CharField(max_length=128)),
                ('firmaeposta', models.CharField(max_length=128)),
                ('firmaadres', models.CharField(max_length=256)),
                ('infolevel', models.IntegerField()),
                ('infostatus', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_membership_organizer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysMembershipReferee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_secret_id', models.CharField(max_length=128)),
                ('branch', models.CharField(max_length=256)),
                ('nufuscuzdani', models.CharField(max_length=128)),
                ('diploma', models.CharField(max_length=128)),
                ('sabikakaydi', models.CharField(max_length=128)),
                ('cezayazisi', models.CharField(max_length=128)),
                ('saglikbeyanformu', models.CharField(max_length=128)),
                ('hakembilgiformu', models.CharField(max_length=128)),
                ('infolevel', models.IntegerField()),
                ('infostatus', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_membership_referee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysMesafeScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_secret_id', models.CharField(max_length=128)),
                ('event_day_date', models.DateField()),
                ('day_type', models.IntegerField()),
                ('task_overall', models.CharField(max_length=256)),
                ('task_sports', models.CharField(max_length=256)),
                ('task_women', models.CharField(max_length=256)),
                ('task_clubs', models.CharField(max_length=256)),
                ('task_turkishnat', models.CharField(max_length=256)),
                ('comp_overall', models.CharField(max_length=256)),
                ('comp_sports', models.CharField(max_length=256)),
                ('comp_women', models.CharField(max_length=256)),
                ('comp_clubs', models.CharField(max_length=256)),
                ('comp_turkishnat', models.CharField(max_length=256)),
                ('full_icg', models.CharField(max_length=256)),
                ('task_status', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'system_ebys_mesafe_score',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysMilliSporcu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_secret_id', models.CharField(max_length=32)),
                ('branch_secret_id', models.CharField(max_length=32)),
                ('branch_sub_cat', models.CharField(max_length=32)),
                ('belge_yili', models.IntegerField()),
                ('belge_no', models.CharField(max_length=32)),
                ('belge_sinifi', models.CharField(max_length=32)),
                ('belge_dogrulama_kodu', models.CharField(max_length=32)),
                ('milli_oldugu_organizasyon', models.CharField(max_length=128)),
                ('moo_baslangic_bitis', models.CharField(max_length=32)),
                ('moo_ulke_sayisi', models.CharField(max_length=64)),
                ('moo_sporcu_sayisi', models.CharField(max_length=64)),
                ('millilik_belgesi', models.CharField(max_length=64)),
                ('created_date', models.DateTimeField()),
                ('created_user', models.CharField(max_length=32)),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_milli_sporcu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysPasswordauth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_id', models.CharField(max_length=255)),
                ('user_secret_id', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'system_ebys_passwordauth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysPersonal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_id', models.CharField(max_length=16)),
                ('category_secret', models.CharField(max_length=16)),
                ('tckimlik', models.CharField(max_length=16)),
                ('namesurname', models.CharField(max_length=64)),
                ('subtitle', models.CharField(max_length=128)),
                ('birthday', models.CharField(max_length=10)),
                ('gender', models.CharField(max_length=5)),
                ('phone', models.CharField(max_length=14)),
                ('email', models.CharField(max_length=128)),
                ('nufus_il', models.IntegerField()),
                ('nufus_ilce', models.CharField(max_length=128)),
                ('home_address', models.TextField()),
                ('emergency_title', models.CharField(max_length=128)),
                ('emergency_number', models.CharField(max_length=14)),
                ('bloodgroup', models.CharField(max_length=20)),
                ('hastaliklar', models.CharField(max_length=256)),
                ('alerji', models.CharField(max_length=256)),
                ('ise_baslama_tarihi', models.CharField(max_length=10)),
                ('iban', models.CharField(max_length=64)),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_personal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysPersonalCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_id', models.CharField(max_length=16)),
                ('title', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'system_ebys_personal_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysPuanDurumuFfsalon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_secret_id', models.CharField(max_length=32)),
                ('user_secret_id', models.CharField(max_length=32)),
                ('puan_1', models.CharField(max_length=11)),
                ('puan_1_status', models.IntegerField()),
                ('puan_2', models.CharField(max_length=11)),
                ('puan_2_status', models.IntegerField()),
                ('puan_3', models.CharField(max_length=11)),
                ('puan_3_status', models.IntegerField()),
                ('puan_4', models.CharField(max_length=11)),
                ('puan_4_status', models.IntegerField()),
                ('toplam_puan', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_puan_durumu_ffsalon',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysPuanDurumuHedef',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_secret_id', models.CharField(max_length=32)),
                ('user_secret_id', models.CharField(max_length=32)),
                ('puan_1', models.IntegerField()),
                ('puan_1_status', models.IntegerField()),
                ('puan_2', models.IntegerField()),
                ('puan_2_status', models.IntegerField()),
                ('puan_3', models.IntegerField()),
                ('puan_3_status', models.IntegerField()),
                ('puan_4', models.IntegerField()),
                ('puan_4_status', models.IntegerField()),
                ('puan_5', models.IntegerField()),
                ('puan_5_status', models.IntegerField()),
                ('puan_6', models.IntegerField()),
                ('puan_6_status', models.IntegerField()),
                ('toplam_puan', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_puan_durumu_hedef',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysPuanDurumuImac',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_secret_id', models.CharField(max_length=32)),
                ('user_secret_id', models.CharField(max_length=32)),
                ('puan_1', models.CharField(max_length=11)),
                ('puan_1_status', models.IntegerField()),
                ('puan_2', models.CharField(max_length=11)),
                ('puan_2_status', models.IntegerField()),
                ('puan_3', models.CharField(max_length=11)),
                ('puan_3_status', models.IntegerField()),
                ('puan_4', models.CharField(max_length=11)),
                ('puan_4_status', models.IntegerField()),
                ('toplam_puan', models.CharField(max_length=11)),
            ],
            options={
                'db_table': 'system_ebys_puan_durumu_imac',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysRefereeStatu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_secret_id', models.CharField(max_length=64)),
                ('branch_secret_id', models.CharField(max_length=64)),
                ('statu', models.CharField(max_length=18)),
                ('statu_change_date', models.DateField()),
                ('statu_change_user', models.CharField(max_length=32)),
                ('statu_changer_db_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'system_ebys_referee_statu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysSmsemailAuth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=32)),
                ('type', models.CharField(max_length=5)),
                ('auth_code', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'system_ebys_smsemail_auth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysSmslist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_id', models.CharField(max_length=32)),
                ('record_secret_id', models.CharField(max_length=32)),
                ('namesurname', models.CharField(max_length=64)),
                ('phone', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'system_ebys_smslist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysSmslistCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_id', models.CharField(max_length=32)),
                ('title', models.CharField(max_length=128)),
                ('creator', models.CharField(max_length=32)),
                ('created_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'system_ebys_smslist_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysSmssendLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_id', models.CharField(max_length=32)),
                ('smslist_category', models.CharField(max_length=32)),
                ('sms_number', models.CharField(max_length=32)),
                ('message', models.TextField()),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'system_ebys_smssend_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysTezcan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adi', models.CharField(max_length=255)),
                ('soyadi', models.CharField(max_length=255)),
                ('dogumyeri', models.CharField(max_length=255)),
                ('dogumtarihi', models.CharField(max_length=255)),
                ('tckimik', models.CharField(max_length=255)),
                ('eposta', models.CharField(max_length=255)),
                ('ulke', models.CharField(max_length=255)),
                ('sehir', models.CharField(max_length=255)),
                ('ikametadres', models.TextField()),
                ('ceptelefonu', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'system_ebys_tezcan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysTezcanArakayit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_id', models.CharField(max_length=32)),
                ('ad', models.CharField(max_length=64)),
                ('soyad', models.CharField(max_length=64)),
                ('tckimlik', models.CharField(max_length=11)),
                ('dtarih', models.DateField()),
                ('eposta', models.CharField(max_length=128)),
                ('phone', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'system_ebys_tezcan_arakayit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysTezcanRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adsoyad', models.CharField(max_length=64)),
                ('tckimlik', models.CharField(max_length=11)),
                ('dtarih', models.CharField(max_length=10)),
                ('telefon', models.CharField(max_length=14)),
                ('eposta', models.CharField(max_length=64)),
                ('username', models.CharField(max_length=64)),
                ('photo', models.CharField(max_length=64)),
                ('kulup', models.CharField(max_length=64)),
                ('odul', models.CharField(max_length=64)),
                ('video', models.CharField(max_length=256)),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'system_ebys_tezcan_record',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemEbysUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_id', models.CharField(max_length=32)),
                ('profilpicture', models.CharField(max_length=128)),
                ('namesurname', models.CharField(max_length=64)),
                ('phone', models.CharField(max_length=32)),
                ('email', models.CharField(max_length=128)),
                ('password', models.CharField(max_length=128)),
                ('permission', models.TextField()),
                ('login_sms', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'system_ebys_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemGeciciKulubSporcu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_secret_id', models.CharField(max_length=32)),
                ('club_secret_id', models.CharField(max_length=32)),
                ('kulup', models.CharField(max_length=128)),
                ('sporcular', models.TextField()),
                ('toplampuan', models.IntegerField()),
            ],
            options={
                'db_table': 'system_gecici_kulub_sporcu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemLoginredirect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('redirect', models.CharField(max_length=32)),
                ('user_secret_id', models.CharField(max_length=64)),
                ('login_secret_id', models.CharField(max_length=64)),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'system_loginredirect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemModulemap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modulename', models.CharField(db_column='moduleName', max_length=255)),
                ('moduleicon', models.CharField(db_column='moduleIcon', max_length=255)),
                ('moduletablename', models.CharField(db_column='moduleTableName', max_length=255)),
                ('moduleurl', models.CharField(db_column='moduleUrl', max_length=255)),
                ('modulelang', models.TextField(db_column='moduleLang')),
                ('modulelangurl', models.CharField(db_column='moduleLangUrl', max_length=256)),
                ('modulelangalign', models.CharField(db_column='moduleLangAlign', max_length=256)),
                ('moduletype', models.IntegerField(db_column='moduleType')),
                ('relatedmodule', models.CharField(db_column='relatedModule', max_length=255)),
                ('modulesort', models.IntegerField(db_column='moduleSort')),
                ('modulemediapath', models.CharField(db_column='moduleMediaPath', max_length=64)),
                ('modulemediaresize', models.IntegerField(db_column='moduleMediaResize')),
                ('resizebigwidth', models.IntegerField(db_column='resizeBigWidth')),
                ('resizebigheight', models.IntegerField(db_column='resizeBigHeight')),
                ('resizesmallwidth', models.IntegerField(db_column='resizeSmallWidth')),
                ('resizesmallheight', models.IntegerField(db_column='resizeSmallHeight')),
                ('dbjson', models.TextField()),
            ],
            options={
                'db_table': 'system_modulemap',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemUtsAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('email', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'system_uts_admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemUtsCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'system_uts_city',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemUtsClub',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('authorized', models.CharField(max_length=256)),
                ('antrenor', models.CharField(max_length=256)),
                ('phone', models.CharField(max_length=256)),
                ('email', models.CharField(max_length=256)),
                ('address', models.TextField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'system_uts_club',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemUtsEquipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField()),
                ('pilot_id', models.IntegerField()),
                ('club_id', models.IntegerField()),
                ('kanat_markasi', models.CharField(max_length=64)),
                ('kanat_sinifi', models.CharField(max_length=64)),
                ('kanat_rengi', models.CharField(max_length=64)),
                ('harnes', models.CharField(max_length=256)),
                ('paramotor_markasi', models.CharField(max_length=64)),
                ('paramotor_serino', models.CharField(max_length=64)),
                ('nereden_satinalindi', models.IntegerField()),
                ('firma_kisi_bilgisi', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'system_uts_equipment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemUtsEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_id', models.CharField(max_length=32)),
                ('created', models.CharField(max_length=32)),
                ('type', models.IntegerField()),
                ('type_2', models.IntegerField()),
                ('takeoff', models.IntegerField()),
                ('title', models.CharField(max_length=256)),
                ('date', models.DateField()),
                ('time', models.CharField(max_length=64)),
                ('cities', models.CharField(max_length=128)),
                ('pilot_list', models.TextField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'system_uts_event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemUtsJandarma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('eposta', models.CharField(max_length=256)),
                ('telefon', models.CharField(max_length=256)),
                ('faks', models.CharField(max_length=256)),
                ('adres', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'system_uts_jandarma',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemUtsPilot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('surname', models.CharField(max_length=256)),
                ('tckimlik', models.CharField(max_length=11)),
                ('phone', models.CharField(max_length=14)),
                ('email', models.CharField(max_length=256)),
                ('birthday', models.DateField()),
            ],
            options={
                'db_table': 'system_uts_pilot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemUtsPreregistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tckimlik', models.IntegerField()),
                ('ad', models.CharField(max_length=256)),
                ('soyad', models.CharField(max_length=256)),
                ('dtarih', models.DateField()),
                ('eposta', models.CharField(max_length=256)),
                ('telefon', models.CharField(max_length=14)),
            ],
            options={
                'db_table': 'system_uts_preregistration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemUtsSignupauth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_id', models.IntegerField()),
                ('user_type', models.IntegerField()),
                ('email_auth', models.IntegerField()),
                ('email_confirm', models.IntegerField()),
                ('phone_auth', models.IntegerField()),
                ('phone_confirm', models.IntegerField()),
            ],
            options={
                'db_table': 'system_uts_signupauth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemUtsTakeoff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.IntegerField()),
                ('coor_lat', models.CharField(max_length=256)),
                ('coor_long', models.CharField(max_length=256)),
                ('title', models.CharField(max_length=256)),
                ('adres', models.TextField()),
                ('ucus_saati', models.CharField(max_length=256)),
                ('kalkis_alani_koordinat', models.CharField(max_length=256)),
                ('kalkis_alani_yukseklik', models.CharField(max_length=256)),
                ('inis_alani_koordinat', models.CharField(max_length=256)),
                ('inis_alani_yukseklik', models.CharField(max_length=256)),
                ('ucus_yapilacak_yaricap', models.CharField(max_length=256)),
                ('maksimum_irtifa', models.CharField(max_length=256)),
                ('kalkis_yonleri', models.TextField()),
                ('pilot_seviyesi', models.TextField()),
                ('yol_durumu', models.TextField()),
                ('aciklamalar', models.TextField()),
            ],
            options={
                'db_table': 'system_uts_takeoff',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemUtsUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_id', models.IntegerField()),
                ('type_id', models.IntegerField()),
                ('email', models.CharField(max_length=256)),
                ('password', models.CharField(max_length=256)),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'system_uts_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TempRegistrationData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_id', models.PositiveIntegerField()),
                ('reg_time', models.IntegerField()),
                ('user_name', models.CharField(max_length=12)),
                ('user_pass', models.TextField()),
                ('user_salt', models.CharField(max_length=32)),
                ('user_email', models.CharField(max_length=255)),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('street_address', models.CharField(max_length=60)),
                ('city', models.CharField(max_length=60)),
                ('state', models.CharField(max_length=50)),
                ('zip', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'temp_registration_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('date', models.DateField(blank=True, null=True, verbose_name='Kabul Tarihi')),
                ('report', models.FileField(blank=True, null=True, upload_to='kabul/', verbose_name='Kabul Tutanagı')),
                ('installedPower', models.CharField(max_length=100, verbose_name='İşletmedeki Mekanik Güç  (MWm)')),
                ('currentPower', models.CharField(max_length=100, verbose_name='İşletmedeki Elektiriksel Güç  (MWe)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssociateDegreeFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('file', models.FileField(upload_to='onlisans-sureci/', verbose_name='Önlisans Süreci Dokümanı')),
                ('date', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssociateDegreeFileName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('secretId', models.CharField(max_length=10)),
                ('title', models.CharField(blank=True, max_length=120, null=True, verbose_name='Branş Adı')),
                ('is_parent', models.BooleanField(default=True)),
                ('is_show', models.BooleanField(default=True)),
                ('sort', models.IntegerField(blank=True, null=True, verbose_name='Branş Sort')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.branch')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('budgetDate', models.DateField(blank=True, null=True, verbose_name='Tarih')),
                ('budgetFile', models.FileField(blank=True, null=True, upload_to='butce/', verbose_name='Bütçe Dokümanı')),
                ('annualSpendAmount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Yıılık Harcanan Miktar')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BusinessBlog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('start_notification', models.IntegerField(blank=True, null=True)),
                ('finish_notification', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BusinessBlogParametreType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('title', models.CharField(blank=True, max_length=120, null=True, verbose_name='Başlık')),
                ('type', models.CharField(choices=[('date', 'Tarih'), ('string', 'Metin'), ('number', 'Sayi'), ('year', 'Yil'), ('file', 'Dosya')], default='string', max_length=128, verbose_name='Türü ')),
                ('necessary', models.BooleanField(choices=[(True, 'Zorunlu '), (False, 'Zorunlu Degil')], default=False)),
                ('company_necessary', models.BooleanField(choices=[(True, 'Evet '), (False, 'Hayır')], default=False)),
                ('is_change', models.BooleanField(blank=True, choices=[(True, 'Evet '), (False, 'Hayır')], null=True)),
                ('visibility_in_yeka', models.BooleanField(blank=True, default=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.CharField(max_length=255)),
                ('color', models.CharField(max_length=100)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.CharField(max_length=255)),
                ('forWhichClazz', models.CharField(max_length=255)),
                ('isFirst', models.BooleanField(blank=True, null=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.branch')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.categoryitem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CertificateDegree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.TextField(blank=True, null=True, verbose_name='Sertifika Adı')),
                ('certificateDate', models.DateField(blank=True, null=True)),
                ('educationPlace', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Onay Durumu')),
                ('reddetwhy', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Şehir')),
                ('plateNo', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('title', models.CharField(max_length=1000)),
                ('project', models.CharField(choices=[('BİLGİ SİSTEMİ', 'BİLGİ SİSTEMİ'), ('MOBİL UYGULAMA', 'MOBİL UYGULAMA'), ('WEB SİTE', 'WEB SİTE')], default='BİLGİ SİSTEMİ', max_length=128, verbose_name='Proje Seçiniz')),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('İşlem Devam Ediliyor', 'İşlem Devam Ediliyor'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Kayıt Durumu')),
                ('definition', models.CharField(max_length=1000)),
                ('importanceSort', models.CharField(choices=[('ACİL', 'ACİL'), ('ÖNEMLİ', 'ÖNEMLİ'), ('AZ ÖNEMLİ', 'AZ ÖNEMLİ')], default='ACİL', max_length=128, verbose_name='Önem Durumu')),
                ('pay', models.IntegerField(blank=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClubRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.TextField(blank=True, null=True, verbose_name='Kulüp Üye Rolü')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('nufusCuzdani', models.FileField(blank=True, null=True, upload_to='', verbose_name='Nufüs Cüzdanı')),
                ('diploma', models.FileField(blank=True, null=True, upload_to='', verbose_name='Diploma')),
                ('sabikaKaydi', models.FileField(blank=True, null=True, upload_to='', verbose_name='Sabıka Kaydı')),
                ('cezaYazisi', models.FileField(blank=True, null=True, upload_to='', verbose_name='Ceza Yazısı')),
                ('saglikBeyanFormu', models.FileField(blank=True, null=True, upload_to='', verbose_name='Sağlık Beyan Formu')),
                ('antrenorBelgesi', models.FileField(blank=True, null=True, upload_to='', verbose_name='Antrenör Belgesi')),
                ('infoLevel', models.BooleanField(blank=True, default=True, null=True)),
                ('infoStatus', models.BooleanField(blank=True, default=True, null=True)),
                ('branch', models.ManyToManyField(to='sbs.Branch')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CoachApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Kayıt Durumu')),
                ('dekont', models.FileField(blank=True, null=True, upload_to='dekont/', verbose_name='coachApplication ')),
                ('coach', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.coach')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Collateral',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('guaranteeDate', models.DateField(blank=True, null=True)),
                ('bank', models.CharField(blank=True, max_length=250, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Teminat Miktarı')),
                ('branch', models.CharField(blank=True, max_length=250, null=True)),
                ('reference', models.CharField(blank=True, max_length=250, null=True)),
                ('pikur', models.CharField(blank=True, max_length=250, null=True)),
                ('guaranteeTime', models.IntegerField(blank=True, null=True, verbose_name='Taminat Süresi')),
                ('definition', models.CharField(blank=True, max_length=250, null=True)),
                ('status', models.CharField(blank=True, max_length=250, null=True)),
                ('guaranteeFile', models.FileField(blank=True, null=True, upload_to='teminat/', validators=[sbs.services.services.validate_file_size], verbose_name='Teminat Mektubu')),
                ('guaranteeCount', models.IntegerField()),
                ('rebateDate', models.DateField(blank=True, null=True, verbose_name='İade Tarihi')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Communication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('secretId', models.CharField(blank=True, max_length=20, null=True)),
                ('postalCode', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneNumber2', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneHome', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneJop', models.CharField(blank=True, max_length=120, null=True)),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('addressHome', models.TextField(blank=True, null=True, verbose_name='AdresHome')),
                ('addressJop', models.TextField(blank=True, null=True, verbose_name='AdresJop')),
                ('town', models.CharField(blank=True, max_length=120, null=True)),
                ('neighborhood', models.CharField(blank=True, max_length=120, null=True)),
                ('acildurum_kisi', models.CharField(blank=True, max_length=250, null=True, verbose_name='Acil Durum Kişisi')),
                ('acildurum_phone', models.CharField(blank=True, max_length=11, null=True, verbose_name='Acil Durum Telefonu')),
                ('city', models.ForeignKey(blank=True, db_column='city', null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.city', verbose_name='İl')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.CharField(max_length=120, verbose_name='İsim')),
                ('degree', models.CharField(blank=True, max_length=120, null=True, verbose_name='Unvan')),
                ('taxOffice', models.CharField(blank=True, max_length=120, null=True, verbose_name='Vergi Dairesi ')),
                ('taxnumber', models.CharField(blank=True, max_length=120, null=True, verbose_name='Vergi Numarasi  ')),
                ('mail', models.CharField(blank=True, max_length=120, null=True, verbose_name='mail')),
                ('is_consortium', models.BooleanField(blank=True, default=False, null=True)),
                ('communication', models.OneToOneField(blank=True, db_column='communication', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.communication')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyFileNames',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.CharField(blank=True, max_length=120, null=True)),
                ('is_active', models.BooleanField(choices=[(True, 'Zorunlu Alan'), (False, 'Zorunlu Degil')], default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('authorization_period_start', models.DateField(blank=True, null=True)),
                ('authorization_period_finish', models.DateField(blank=True, null=True)),
                ('communication', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.communication')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CompetitionApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('startDate', models.DateField(blank=True, null=True)),
                ('finishDate', models.DateField(blank=True, null=True)),
                ('preRegistration', models.BooleanField(choices=[(True, 'Evet '), (False, 'Hayır')], default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConnectionRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.CharField(max_length=255, verbose_name='Bağlantı Bölgesi')),
                ('capacity', models.IntegerField(verbose_name='Kapasite')),
                ('cities', models.ManyToManyField(to='sbs.City')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConnectionUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.CharField(max_length=250, verbose_name='Birim')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Coordinate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('y', models.DecimalField(decimal_places=6, max_digits=9)),
                ('x', models.DecimalField(decimal_places=6, max_digits=9)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Ülke')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='DirectoryCommission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.CharField(max_length=250, verbose_name='Kurul Adı')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DirectoryMemberRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.CharField(max_length=250, verbose_name='Üye Rolü')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='İlçe')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.city')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('communication', models.OneToOneField(db_column='communication', on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.communication')),
            ],
            options={
                'ordering': ['pk'],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Employment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('employmentDate', models.DateField(blank=True, null=True, verbose_name='Tarihi')),
                ('employmentFile', models.FileField(blank=True, null=True, upload_to='istihdam/', verbose_name=' İstihdam Dokümanı')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Eskalasyon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('series', models.CharField(max_length=100, verbose_name='Seri Kodu')),
                ('startDate', models.CharField(max_length=100)),
                ('endDate', models.CharField(max_length=100)),
                ('key', models.CharField(max_length=100, verbose_name='Merkez Bankası API Key')),
                ('aggregationTypes', models.CharField(max_length=100, verbose_name='Matematiksel Fonsiyon İşlemi')),
                ('formulas', models.CharField(max_length=100, verbose_name='Formül Parametresi')),
                ('frequency', models.CharField(max_length=100, verbose_name='Frekans Parametresi')),
                ('result', models.DecimalField(decimal_places=2, max_digits=10)),
                ('result_description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Sonuç Açıklaması')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExtraTimeFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('definition', models.CharField(blank=True, max_length=250, null=True)),
                ('file', models.FileField(upload_to='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Factory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=120)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FactoryFileName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.CharField(blank=True, max_length=120, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FileExtension',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extension', models.CharField(blank=True, max_length=100, null=True)),
                ('mime_type', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HavaLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('levelType', models.CharField(choices=[('VISA', 'VISA'), ('GRADE', 'GRADE'), ('BELT', 'BELT')], max_length=128, verbose_name='Leveller')),
                ('isActive', models.BooleanField(default=False)),
                ('startDate', models.DateField(blank=True, null=True)),
                ('expireDate', models.DateField(blank=True, null=True)),
                ('durationDay', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Onay Durumu')),
                ('dekont', models.FileField(blank=True, null=True, upload_to='dekont/', verbose_name='Belge ')),
                ('form', models.FileField(upload_to='form/', verbose_name='Form ')),
                ('secretId', models.CharField(blank=True, max_length=255, null=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.branch')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.city', verbose_name='İl')),
                ('definition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.categoryitem')),
                ('definitionChangeUser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('isActive', models.BooleanField(default=False)),
                ('licenseNo', models.CharField(blank=True, max_length=255, null=True)),
                ('expireDate', models.DateField(blank=True, null=True)),
                ('startDate', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Onay Durumu')),
                ('lisansPhoto', models.FileField(blank=True, null=True, upload_to='lisans/', verbose_name='Lisans')),
                ('reddetwhy', models.CharField(blank=True, max_length=255, null=True)),
                ('isFerdi', models.BooleanField(default=False)),
                ('licenseName', models.TextField(blank=True, null=True, verbose_name='Lisans')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('parcel', models.CharField(blank=True, max_length=250, null=True)),
                ('city', models.ForeignKey(blank=True, db_column='city', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.city', verbose_name='İl')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.district')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('not_description', models.CharField(blank=True, max_length=200, null=True, verbose_name='İçerik')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Başlık')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('codename', models.CharField(max_length=300)),
                ('codeurl', models.CharField(max_length=300)),
                ('group', models.CharField(blank=True, choices=[('Yeka', 'Yeka'), ('Personel', 'Personel'), ('Firma', 'Firma'), ('Anasayfa', 'Anasayfa'), ('Ayarlar', 'Ayarlar'), ('Digerleri', 'Digerleri')], max_length=100, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.permission')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('tc', models.CharField(blank=True, max_length=120, null=True)),
                ('height', models.CharField(blank=True, max_length=120, null=True)),
                ('weight', models.CharField(blank=True, max_length=120, null=True)),
                ('birthplace', models.CharField(blank=True, max_length=120, null=True, verbose_name='Doğum Yeri')),
                ('motherName', models.CharField(blank=True, max_length=120, null=True, verbose_name='Anne Adı')),
                ('fatherName', models.CharField(blank=True, max_length=120, null=True, verbose_name='Baba Adı')),
                ('profileImage', models.ImageField(blank=True, default='profile/user.png', null=True, upload_to='profile/', verbose_name='Profil Resmi')),
                ('birthDate', models.DateField(blank=True, null=True, verbose_name='Doğum Tarihi')),
                ('bloodType', models.CharField(blank=True, choices=[('ABRH(+)', 'ABRH(+)'), ('ABRH(-)', 'ABRH(-)'), ('ARH(+)', 'ARH(+)'), ('ARH(-)', 'ARH(-)'), ('BRH(+)', 'BRH(+)'), ('BRH(-)', 'BRH(-)'), ('0RH(+)', '0RH(+)'), ('0RH(-)', '0RH(-)')], default='ABRH(+)', max_length=128, null=True, verbose_name='Kan Grubu')),
                ('gender', models.IntegerField(blank=True, choices=[(0, 'Erkek'), (1, 'Kadın')], null=True)),
                ('is_unvani', models.CharField(blank=True, max_length=120, null=True)),
                ('iban', models.CharField(blank=True, max_length=120, null=True, verbose_name='İban Adresi')),
                ('hesKodu', models.CharField(blank=True, max_length=20, null=True, verbose_name='HES KODU')),
                ('secretId', models.CharField(blank=True, max_length=20, null=True)),
                ('user', models.OneToOneField(blank=True, db_column='user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ProduceAmount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('date', models.DateField(blank=True, null=True, verbose_name='Tarih')),
                ('quantity', models.IntegerField(blank=True, null=True, verbose_name='Miktar(GWh)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProgressReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('definition', models.CharField(blank=True, max_length=250, null=True, verbose_name='Açıklama')),
                ('reportFile', models.FileField(blank=True, null=True, upload_to='ilerleme-raporu/', verbose_name='İlerleme Raporu')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('information_form', models.FileField(blank=True, null=True, upload_to='information/', validators=[sbs.services.services.validate_file_size])),
                ('date', models.DateField(blank=True, null=True)),
                ('farm_form', models.FileField(blank=True, null=True, upload_to='', validators=[sbs.services.services.validate_file_size])),
                ('status', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=250, verbose_name='Aday Yeka')),
                ('kml_file', models.FileField(blank=True, null=True, upload_to='aday_yeka/', validators=[sbs.services.services.validate_file_extension], verbose_name='KML Dosyası')),
                ('coordinate', models.ManyToManyField(to='sbs.Coordinate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Referee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('nufusCuzdani', models.FileField(blank=True, max_length=500, null=True, upload_to='referee/', verbose_name='Nufüs Cüzdanı')),
                ('diploma', models.FileField(blank=True, max_length=500, null=True, upload_to='referee/', verbose_name='Diploma')),
                ('sabikaKaydi', models.FileField(blank=True, max_length=500, null=True, upload_to='referee/', verbose_name='Sabıka Kaydı')),
                ('cezaYazisi', models.FileField(blank=True, max_length=500, null=True, upload_to='referee/', verbose_name='Ceza Yazısı')),
                ('saglikBeyanFormu', models.FileField(blank=True, max_length=500, null=True, upload_to='referee/', verbose_name='Sağlık Beyan Formu')),
                ('hakemBilgiFormu', models.FileField(blank=True, max_length=500, null=True, upload_to='referee/', verbose_name='Hakem Bilgi Formu')),
                ('infoLevel', models.BooleanField(blank=True, default=True, null=True)),
                ('infoStatus', models.BooleanField(blank=True, default=True, null=True)),
                ('secretId', models.CharField(blank=True, max_length=250, null=True)),
                ('communication', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sbs.communication')),
                ('grades', models.ManyToManyField(related_name='Refereegrades', to='sbs.HavaLevel')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sbs.person')),
                ('visa', models.ManyToManyField(related_name='Refereevisa', to='sbs.HavaLevel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RefereeApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Kayıt Durumu')),
                ('dekont', models.FileField(blank=True, null=True, upload_to='dekont/', verbose_name='refereeApplication ')),
                ('referee', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.referee')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(blank=True, max_length=120, null=True)),
                ('value', models.CharField(blank=True, max_length=120, null=True)),
                ('label', models.CharField(blank=True, max_length=250, null=True)),
                ('explanation', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VacationDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('definition', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.DateTimeField(blank=True, null=True, verbose_name='Tatil Günü')),
            ],
            options={
                'verbose_name': 'VacationDay',
            },
        ),
        migrations.CreateModel(
            name='Yeka',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('definition', models.CharField(blank=True, max_length=250, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('is_parent', models.BooleanField(blank=True, default=False, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('kml_file', models.FileField(blank=True, null=True, upload_to='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaApplicationFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaApplicationFileName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('filename', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaBusiness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='İs Planı Tanımı:')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaBusinessBlog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('startDate', models.DateTimeField(blank=True, null=True)),
                ('finisDate', models.DateTimeField(blank=True, null=True)),
                ('businessTime', models.IntegerField(blank=True, null=True)),
                ('time_type', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, default='Başlanmadı', max_length=100, null=True)),
                ('sorting', models.IntegerField(default=0)),
                ('indefinite', models.BooleanField(choices=[(True, 'Süresiz '), (False, 'Süreli')], default=False)),
                ('explanation', models.CharField(blank=True, max_length=250, null=True)),
                ('completion_date', models.DateTimeField(blank=True, null=True, verbose_name='Tamamlanma Tarihi')),
                ('businessblog', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.businessblog')),
                ('child_block', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='business_child', to='sbs.yekabusinessblog')),
                ('companies', models.ManyToManyField(to='sbs.Company')),
                ('dependence_parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='depence_parent', to='sbs.yekabusinessblog')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaCompetition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.CharField(max_length=250, verbose_name='Yeka Yarışması')),
                ('capacity', models.IntegerField(verbose_name='Kapasite')),
                ('date', models.DateField(blank=True, null=True)),
                ('eskalasyon_first_date', models.CharField(blank=True, max_length=100, null=True)),
                ('is_calculation', models.BooleanField(blank=True, default=True, null=True)),
                ('business', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusiness')),
                ('city', models.ManyToManyField(to='sbs.City')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.company')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekacompetition')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaCompetitionEskalasyon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('result', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('pre_result', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekacompetition', verbose_name='Yeka Yarışması')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('startDate', models.DateField(blank=True, null=True, verbose_name='Başlama Tarihi')),
                ('finisDate', models.DateField(blank=True, null=True, verbose_name='Bitiş  Tarihi')),
                ('file', models.FileField(blank=True, null=True, upload_to='CompanyUser/', verbose_name='Atama Yazısı')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.companyuser')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaPurchaseGuarantee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('time', models.IntegerField(blank=True, null=True, verbose_name='Süre')),
                ('total_quantity', models.IntegerField(blank=True, null=True, verbose_name='Toplam Miktar(GWh)')),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusiness')),
                ('yekabusinessblog', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusinessblog')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaProposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusiness')),
                ('proposal', models.ManyToManyField(to='sbs.Proposal')),
                ('yekabusinessblog', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusinessblog')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaProgressReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('competition', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekacompetition')),
                ('progressReport', models.ManyToManyField(to='sbs.ProgressReport')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaProduceAmount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('amount', models.ManyToManyField(blank=True, null=True, to='sbs.ProduceAmount', verbose_name='Üretim Miktarı')),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusiness')),
                ('yekabusinessblog', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusinessblog')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaPersonHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.employee', verbose_name='personel')),
                ('yeka', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yeka', verbose_name='yeka')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaPerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('task_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.employee')),
                ('yeka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yeka')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaHoldingCompetition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusiness')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.connectionunit')),
                ('yekabusinessblog', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusinessblog')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaGuarantee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusiness')),
                ('guarantee', models.ManyToManyField(to='sbs.Collateral')),
                ('yekabusinessblog', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusinessblog')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaFactory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusiness')),
                ('factory', models.ManyToManyField(to='sbs.Factory')),
                ('yekabusinessblog', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusinessblog')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaEmployment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusiness')),
                ('employment', models.ManyToManyField(to='sbs.Employment')),
                ('yekabusinessblog', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusinessblog')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaContract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('contract_date', models.DateField(blank=True, null=True)),
                ('contract', models.FileField(blank=True, null=True, upload_to='')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('eskalasyonMaxPrice', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusiness')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.company')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.connectionunit')),
                ('yekabusinessblog', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusinessblog')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaConnectionRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('connectionRegion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.connectionregion')),
                ('yeka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yeka')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaCompetitionPersonHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekacompetition', verbose_name='competition')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.employee', verbose_name='personel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaCompetitionPerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('task_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('competition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekacompetition')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaCompetitionEskalasyon_eskalasyon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('eskalasyon_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.eskalasyon')),
                ('yeka_competition_eskalasyon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekacompetitioneskalasyon')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaCompanyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusiness')),
                ('companyuser', models.ManyToManyField(to='sbs.YekaUser')),
                ('yekabusinessblog', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusinessblog')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaCompanyHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.company')),
                ('yeka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yeka')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True, null=True)),
                ('application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.competitionapplication')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.company')),
                ('competition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekacompetition')),
                ('connection_region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.connectionregion')),
                ('files', models.ManyToManyField(to='sbs.YekaApplicationFile')),
                ('yeka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yeka')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaBusinessBlogParemetre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('value', models.CharField(blank=True, max_length=120, null=True, verbose_name='value')),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
                ('title', models.CharField(blank=True, max_length=120, null=True, verbose_name='parametre adı')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sbs.company')),
                ('parametre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sbs.businessblogparametretype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='yekabusinessblog',
            name='parameter',
            field=models.ManyToManyField(blank=True, null=True, to='sbs.YekaBusinessBlogParemetre'),
        ),
        migrations.AddField(
            model_name='yekabusinessblog',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='business_parent', to='sbs.yekabusinessblog'),
        ),
        migrations.AddField(
            model_name='yekabusiness',
            name='businessblogs',
            field=models.ManyToManyField(to='sbs.YekaBusinessBlog'),
        ),
        migrations.AddField(
            model_name='yekabusiness',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.company'),
        ),
        migrations.CreateModel(
            name='YekaBudget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('budget', models.ManyToManyField(to='sbs.Budget')),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusiness')),
                ('yekabusinessblog', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusinessblog')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YekaAssociateDegree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('associateDegree', models.ManyToManyField(to='sbs.AssociateDegreeFile')),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusiness')),
                ('yekabusinessblog', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusinessblog')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='yekaapplicationfile',
            name='filename',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekaapplicationfilename'),
        ),
        migrations.CreateModel(
            name='YekaAccept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('accept', models.ManyToManyField(to='sbs.Accept')),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusiness')),
                ('yekabusinessblog', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusinessblog')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='yeka',
            name='business',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusiness'),
        ),
        migrations.AddField(
            model_name='yeka',
            name='connection_region',
            field=models.ManyToManyField(to='sbs.ConnectionRegion'),
        ),
        migrations.AddField(
            model_name='yeka',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.connectionunit'),
        ),
        migrations.AddField(
            model_name='yeka',
            name='yekaParent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yeka'),
        ),
        migrations.CreateModel(
            name='VisaSeminar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.CharField(max_length=1000)),
                ('startDate', models.DateTimeField()),
                ('finishDate', models.DateTimeField()),
                ('location', models.CharField(max_length=1000)),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Kayıt Durumu')),
                ('forWhichClazz', models.CharField(max_length=255)),
                ('year', models.CharField(blank=True, max_length=100, null=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.branch', verbose_name='branş')),
                ('coach', models.ManyToManyField(related_name='coach', to='sbs.Coach')),
                ('coachApplication', models.ManyToManyField(related_name='coachApplication', to='sbs.CoachApplication')),
                ('referee', models.ManyToManyField(related_name='referee', to='sbs.Referee')),
                ('refereeApplication', models.ManyToManyField(related_name='refereeApplication', to='sbs.RefereeApplication')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='SportClubUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('dataAccessControl', models.BooleanField(blank=True, default=False, null=True)),
                ('oldpk', models.IntegerField(blank=True, null=True)),
                ('communication', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sbs.communication')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sbs.person')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.clubrole', verbose_name='Üye Rolü')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReferenceReferee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Onay Durumu')),
                ('iban', models.CharField(max_length=120, verbose_name='İban Adresi')),
                ('tc', models.CharField(blank=True, max_length=120, null=True)),
                ('height', models.CharField(blank=True, max_length=120, null=True)),
                ('weight', models.CharField(blank=True, max_length=120, null=True)),
                ('birthplace', models.CharField(blank=True, max_length=120, null=True, verbose_name='Doğum Yeri')),
                ('motherName', models.CharField(blank=True, max_length=120, null=True, verbose_name='Anne Adı')),
                ('fatherName', models.CharField(blank=True, max_length=120, null=True, verbose_name='Baba Adı')),
                ('profileImage', models.ImageField(upload_to='profile/', verbose_name='Profil Resmi')),
                ('birthDate', models.DateField(blank=True, null=True, verbose_name='Doğum Tarihi')),
                ('bloodType', models.CharField(blank=True, choices=[('AB Rh+', 'AB Rh+'), ('AB Rh-', 'AB Rh-'), ('A Rh+', 'A Rh+'), ('A Rh-', 'A Rh-'), ('B Rh+', 'B Rh+'), ('B Rh-', 'B Rh-'), ('AB Rh+', '0 Rh+'), ('AB Rh+', '0 Rh-')], max_length=128, null=True, verbose_name='Kan Grubu')),
                ('gender', models.CharField(choices=[('Erkek', 'Erkek'), ('Kadın', 'Kadın')], default='Erkek', max_length=128, verbose_name='Cinsiyeti')),
                ('postalCode', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneNumber2', models.CharField(blank=True, max_length=120, null=True)),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('kademe_startDate', models.DateField(verbose_name='Kademe başlangıç Tarihi')),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.')),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. ')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.city', verbose_name='İl')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.country', verbose_name='Ülke')),
                ('kademe_definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.categoryitem')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ReferenceCoach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Onay Durumu')),
                ('iban', models.CharField(max_length=120, verbose_name='İban Adresi')),
                ('tc', models.CharField(blank=True, max_length=120, null=True)),
                ('height', models.CharField(blank=True, max_length=120, null=True)),
                ('weight', models.CharField(blank=True, max_length=120, null=True)),
                ('birthplace', models.CharField(blank=True, max_length=120, null=True, verbose_name='Doğum Yeri')),
                ('motherName', models.CharField(blank=True, max_length=120, null=True, verbose_name='Anne Adı')),
                ('fatherName', models.CharField(blank=True, max_length=120, null=True, verbose_name='Baba Adı')),
                ('profileImage', models.ImageField(upload_to='profile/', verbose_name='Profil Resmi')),
                ('birthDate', models.DateField(blank=True, null=True, verbose_name='Doğum Tarihi')),
                ('bloodType', models.CharField(blank=True, choices=[('AB Rh+', 'AB Rh+'), ('AB Rh-', 'AB Rh-'), ('A Rh+', 'A Rh+'), ('A Rh-', 'A Rh-'), ('B Rh+', 'B Rh+'), ('B Rh-', 'B Rh-'), ('AB Rh+', '0 Rh+'), ('AB Rh+', '0 Rh-')], max_length=128, null=True, verbose_name='Kan Grubu')),
                ('gender', models.CharField(choices=[('Erkek', 'Erkek'), ('Kadın', 'Kadın')], default='Erkek', max_length=128, verbose_name='Cinsiyeti')),
                ('postalCode', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneNumber2', models.CharField(blank=True, max_length=120, null=True)),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. ')),
                ('kademe_startDate', models.DateField(blank=True, null=True, verbose_name='Başlangıç Tarihi ')),
                ('kademe_belge', models.FileField(upload_to='dekont/', verbose_name='Belge')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.city', verbose_name='İl')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.country', verbose_name='Ülke')),
                ('kademe_definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.categoryitem')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalSubYeka',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('proposal', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.proposal')),
                ('sub_yeka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekacompetition')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProposalInstitution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('status', models.CharField(default='Sonuçlanmadı', max_length=100)),
                ('file', models.FileField(blank=True, null=True, upload_to='KurumGorus/', verbose_name='Kurum Görüsleri')),
                ('date', models.DateField(blank=True, null=True)),
                ('number', models.IntegerField(blank=True, null=True, verbose_name='Kurum Görüşü Öneri Sayısı')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.institution')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProposalActive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusiness')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.institution')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='proposal',
            name='institution',
            field=models.ManyToManyField(to='sbs.ProposalInstitution'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='location',
            field=models.ManyToManyField(to='sbs.Location'),
        ),
        migrations.CreateModel(
            name='PreRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Onay Durumu')),
                ('tc', models.CharField(blank=True, max_length=120, null=True)),
                ('height', models.CharField(blank=True, max_length=120, null=True)),
                ('weight', models.CharField(blank=True, max_length=120, null=True)),
                ('birthplace', models.CharField(blank=True, max_length=120, null=True, verbose_name='Doğum Yeri')),
                ('motherName', models.CharField(blank=True, max_length=120, null=True, verbose_name='Anne Adı')),
                ('fatherName', models.CharField(blank=True, max_length=120, null=True, verbose_name='Baba Adı')),
                ('profileImage', models.ImageField(upload_to='profile/', verbose_name='Profil Resmi')),
                ('birthDate', models.DateField(blank=True, null=True, verbose_name='Doğum Tarihi')),
                ('bloodType', models.CharField(blank=True, choices=[('AB Rh+', 'AB Rh+'), ('AB Rh-', 'AB Rh-'), ('A Rh+', 'A Rh+'), ('A Rh-', 'A Rh-'), ('B Rh+', 'B Rh+'), ('B Rh-', 'B Rh-'), ('AB Rh+', '0 Rh+'), ('AB Rh+', '0 Rh-')], max_length=128, null=True, verbose_name='Kan Grubu')),
                ('gender', models.CharField(choices=[('Erkek', 'Erkek'), ('Kadın', 'Kadın')], default='Erkek', max_length=128, verbose_name='Cinsiyeti')),
                ('postalCode', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneNumber2', models.CharField(blank=True, max_length=120, null=True)),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('name', models.CharField(blank=True, max_length=120, null=True)),
                ('shortName', models.CharField(blank=True, max_length=120, null=True)),
                ('foundingDate', models.DateField(blank=True, max_length=120, null=True, verbose_name='Kuruluş Tarihi')),
                ('clubMail', models.CharField(blank=True, max_length=120, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='club/', verbose_name='Kulüp Logo')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('isFormal', models.BooleanField(choices=[(True, 'Spor Kulubü'), (False, 'Diger(Özel Salon-Dojo-Sportif Dernek)')], default=True)),
                ('clubpostalCode', models.CharField(blank=True, max_length=120, null=True)),
                ('clubphoneNumber', models.CharField(blank=True, max_length=120, null=True)),
                ('clubphoneNumber2', models.CharField(blank=True, max_length=120, null=True)),
                ('clubaddress', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('isCoach', models.BooleanField(choices=[(True, 'Evet '), (False, 'Hayır')], default=False)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.')),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. ')),
                ('dekont', models.FileField(blank=True, null=True, upload_to='dekont/', verbose_name='Dekont ')),
                ('petition', models.FileField(upload_to='dekont/', verbose_name='Antrenör Yetki Belgesi  ')),
                ('kademe_definition', models.CharField(blank=True, max_length=150, null=True)),
                ('kademe_startDate', models.DateField(blank=True, null=True, verbose_name='Başlangıç Tarihi ')),
                ('kademe_belge', models.FileField(blank=True, null=True, upload_to='dekont/', verbose_name='Belge')),
                ('iban', models.CharField(blank=True, max_length=120, null=True, verbose_name='İban Adresi')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_city', to='sbs.city', verbose_name='İl')),
                ('clubcity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.city', verbose_name='İl')),
                ('clubcountry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.country', verbose_name='Ülke')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_country', to='sbs.country', verbose_name='Ülke')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.clubrole', verbose_name='Üye Rolü')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='PermissionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('group', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to='auth.group', verbose_name='group')),
                ('permissions', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.permission', verbose_name='permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organizer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('companyName', models.CharField(blank=True, max_length=255, null=True, verbose_name='Firma Ünvanı')),
                ('companyRepresentative', models.CharField(blank=True, max_length=255, null=True, verbose_name='Firma Yetkilisi')),
                ('companyTaxOffice', models.CharField(blank=True, max_length=255, null=True, verbose_name='Firma Vergi Dairesi')),
                ('companyTaxNumber', models.CharField(blank=True, max_length=255, null=True, verbose_name='Firma Vergi Numarası')),
                ('companyPhoneNumber', models.CharField(blank=True, max_length=255, null=True, verbose_name='Firma Telefon Numarası')),
                ('companyEmail', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Firma E-posta')),
                ('companyAddress', models.TextField(blank=True, null=True, verbose_name='Firma Adresi')),
                ('infoLevel', models.BooleanField(blank=True, default=True, null=True)),
                ('infoStatus', models.BooleanField(blank=True, default=True, null=True)),
                ('branch', models.ManyToManyField(to='sbs.Branch')),
                ('communication', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.communication')),
                ('person', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('is_seen', models.BooleanField(default=False)),
                ('is_read', models.BooleanField(default=False)),
                ('read_date', models.DateField(blank=True, null=True)),
                ('notification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.notification')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Newspaper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('listingDate', models.DateField(blank=True, null=True)),
                ('newspaperCount', models.CharField(blank=True, max_length=120, null=True)),
                ('newspapwerText', models.TextField(blank=True, null=True)),
                ('file', models.FileField(upload_to='')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusiness')),
                ('yekabusinessblog', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusinessblog')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Neighborhood',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Mahalle Adı')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.district', verbose_name='İlçe')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.CharField(max_length=120, null=True)),
                ('url', models.CharField(blank=True, max_length=120, null=True)),
                ('is_parent', models.BooleanField()),
                ('is_show', models.BooleanField(default=True)),
                ('fa_icon', models.CharField(blank=True, max_length=120, null=True)),
                ('sorting', models.IntegerField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.menu')),
            ],
            options={
                'ordering': ['sorting'],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('subject', models.CharField(max_length=150, null=True)),
                ('ip', models.CharField(max_length=20, null=True)),
                ('previousData', models.TextField(blank=True, null=True, verbose_name='Önceki Değer')),
                ('nextData', models.TextField(blank=True, null=True, verbose_name='Sonraki Değer')),
                ('status', models.BooleanField(default=False)),
                ('user', models.ForeignKey(db_column='user', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Üye Rolü')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='location',
            name='neighborhood',
            field=models.ForeignKey(blank=True, max_length=120, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.neighborhood'),
        ),
        migrations.CreateModel(
            name='HistoryGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='auth.group', verbose_name='aktivGroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='aktivUser')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HelpMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('text', models.CharField(max_length=250, verbose_name='Açıklama')),
                ('url', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.permission', verbose_name='URL')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FactoryFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('file', models.FileField(upload_to='fabrika-dokumani/', verbose_name='Fabrika Dokümanı')),
                ('date', models.DateField(blank=True, null=True)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.factoryfilename')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='factory',
            name='file',
            field=models.ManyToManyField(to='sbs.FactoryFile'),
        ),
        migrations.CreateModel(
            name='ExtraTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('time', models.IntegerField()),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
                ('time_type', models.CharField(blank=True, max_length=100, null=True)),
                ('definition', models.CharField(blank=True, max_length=250, null=True)),
                ('new_date', models.DateField(blank=True, null=True)),
                ('old_date', models.DateField(blank=True, null=True)),
                ('added_date', models.DateField(blank=True, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusiness')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('yekabusinessblog', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusinessblog')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='person',
            field=models.OneToOneField(db_column='person', on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.person'),
        ),
        migrations.CreateModel(
            name='EducationSeminar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('secretId', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Etkinlik Başlığı')),
                ('startDate', models.DateField(blank=True, null=True, verbose_name='Etkinlik Başlangıç Tarihi')),
                ('finishDate', models.DateField(blank=True, null=True, verbose_name='Etkinlik Bitiş Tarihi')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Etkinlik Açıklama')),
                ('createdDate', models.DateTimeField(blank=True, null=True, verbose_name='Etkinlik Oluşturulma Tarihi')),
                ('status', models.BooleanField(blank=True, default=True, null=True)),
                ('educationTime', models.CharField(blank=True, max_length=255, null=True, verbose_name='Eğitim Süresi')),
                ('branch', models.ManyToManyField(to='sbs.Branch')),
                ('city', models.ForeignKey(blank=True, db_column='city', null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.city', verbose_name='İl')),
                ('coaches', models.ManyToManyField(to='sbs.Coach')),
                ('creator', models.ForeignKey(blank=True, db_column='auth_user', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Etkinliği Oluşturan Kişi')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DirectoryMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('commission', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.directorycommission', verbose_name='Kurulu')),
                ('communication', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.communication')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.person')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.directorymemberrole', verbose_name='Üye Rolü')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ConsortiumCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('percent', models.IntegerField(blank=True, null=True, verbose_name='Yüzde')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Konsorsiyum', to='sbs.company')),
                ('consortium', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Firma', to='sbs.company')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='connectionregion',
            name='yekacompetition',
            field=models.ManyToManyField(related_name='competition_regions', to='sbs.YekaCompetition'),
        ),
        migrations.CreateModel(
            name='CompetitionCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.company')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='competitionapplication',
            name='business',
            field=models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusiness'),
        ),
        migrations.AddField(
            model_name='competitionapplication',
            name='necessary',
            field=models.ManyToManyField(to='sbs.YekaApplicationFileName'),
        ),
        migrations.AddField(
            model_name='competitionapplication',
            name='yekabusinessblog',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusinessblog'),
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('report', models.FileField(blank=True, null=True, upload_to='yarisma/')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Yarisma Tarihi')),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusiness')),
                ('company', models.ManyToManyField(to='sbs.CompetitionCompany')),
                ('yekabusinessblog', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekabusinessblog')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='companyuser',
            name='person',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.person'),
        ),
        migrations.AddField(
            model_name='companyuser',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CompanyFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='company/', verbose_name='company_files')),
                ('filename', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.companyfilenames')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='company',
            name='companyuser',
            field=models.ManyToManyField(blank=True, null=True, to='sbs.CompanyUser'),
        ),
        migrations.AddField(
            model_name='company',
            name='files',
            field=models.ManyToManyField(to='sbs.CompanyFiles'),
        ),
        migrations.AddField(
            model_name='communication',
            name='country',
            field=models.ForeignKey(blank=True, db_column='country', null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.country', verbose_name='Ülke'),
        ),
        migrations.AddField(
            model_name='collateral',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.company'),
        ),
        migrations.AddField(
            model_name='collateral',
            name='competition',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.yekacompetition'),
        ),
        migrations.AddField(
            model_name='coach',
            name='communication',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sbs.communication'),
        ),
        migrations.AddField(
            model_name='coach',
            name='grades',
            field=models.ManyToManyField(related_name='CoachGrades', to='sbs.HavaLevel'),
        ),
        migrations.AddField(
            model_name='coach',
            name='person',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sbs.person'),
        ),
        migrations.AddField(
            model_name='coach',
            name='visa',
            field=models.ManyToManyField(related_name='CoachVisa', to='sbs.HavaLevel'),
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('name', models.CharField(blank=True, max_length=120, null=True)),
                ('shortName', models.CharField(blank=True, max_length=120, null=True)),
                ('foundingDate', models.CharField(blank=True, max_length=120, null=True)),
                ('clubMail', models.CharField(blank=True, max_length=120, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='club/', verbose_name='Kulüp Logo')),
                ('isFormal', models.BooleanField(choices=[(True, 'Spor Kulubü'), (False, 'Diger(Özel Salon-Dojo-Sportif Dernek)')], default=True)),
                ('dataAccessControl', models.BooleanField(blank=True, default=False, null=True)),
                ('password', models.CharField(blank=True, max_length=120, null=True)),
                ('username', models.CharField(blank=True, max_length=120, null=True)),
                ('isRegister', models.BooleanField(default=False)),
                ('petition', models.FileField(blank=True, null=True, upload_to='club/', verbose_name='Yetki Belgesi ')),
                ('infoStatus', models.BooleanField(blank=True, default=True, null=True)),
                ('infoLevel', models.BooleanField(blank=True, default=True, null=True)),
                ('secretId', models.CharField(blank=True, max_length=20, null=True)),
                ('branch', models.ManyToManyField(blank=True, null=True, to='sbs.Branch')),
                ('clubUser', models.ManyToManyField(to='sbs.SportClubUser')),
                ('coachs', models.ManyToManyField(to='sbs.Coach')),
                ('communication', models.OneToOneField(blank=True, db_column='communication', null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.communication')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarYeka',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('startDate', models.DateTimeField(blank=True, null=True)),
                ('finishDate', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('calendarName', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.calendarname')),
                ('competition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.yekacompetition')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('startDate', models.DateTimeField(blank=True, null=True)),
                ('finishDate', models.DateTimeField(blank=True, null=True)),
                ('color', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('calendarName', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.calendarname')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='businessblog',
            name='parametre',
            field=models.ManyToManyField(blank=True, null=True, to='sbs.BusinessBlogParametreType'),
        ),
        migrations.CreateModel(
            name='Athlete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('airTribuneId', models.CharField(blank=True, max_length=255, null=True, verbose_name='airtribune.com')),
                ('insuranceCompany', models.CharField(blank=True, max_length=255, null=True)),
                ('insurancePolicy', models.CharField(blank=True, max_length=255, null=True)),
                ('flightJump', models.CharField(blank=True, max_length=5000, null=True, verbose_name='Uçuş/Atlayış Yer')),
                ('successDegree', models.CharField(blank=True, max_length=5000, null=True, verbose_name='Başarılarınız')),
                ('last12month', models.CharField(blank=True, max_length=255, null=True, verbose_name='Son 12 Ay Uçuş Süresi')),
                ('totalSortie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Toplam Uçuş Süresi')),
                ('infoLevel', models.BooleanField(blank=True, default=True, null=True)),
                ('infoStatus', models.BooleanField(blank=True, default=True, null=True)),
                ('branch', models.ManyToManyField(to='sbs.Branch')),
                ('certificateDegree', models.ManyToManyField(to='sbs.CertificateDegree')),
                ('club', models.ForeignKey(blank=True, db_column='Club', null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.club')),
                ('communication', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.communication')),
                ('licenses', models.ManyToManyField(to='sbs.License')),
                ('person', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='associatedegreefile',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.associatedegreefilename'),
        ),
        migrations.CreateModel(
            name='AirSportsCompetition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('secretId', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Etkinlik Başlığı')),
                ('startDate', models.DateField(blank=True, null=True, verbose_name='Etkinlik Başlangıç Tarihi')),
                ('finishDate', models.DateField(blank=True, null=True, verbose_name='Etkinlik Bitiş Tarihi')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Etkinlik Açıklama')),
                ('createdDate', models.DateTimeField(blank=True, null=True, verbose_name='Etkinlik Oluşturulma Tarihi')),
                ('status', models.BooleanField(blank=True, default=True, null=True)),
                ('branch', models.ManyToManyField(to='sbs.Branch')),
                ('city', models.ForeignKey(blank=True, db_column='city', null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.city', verbose_name='İl')),
                ('creator', models.ForeignKey(blank=True, db_column='auth_user', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Etkinliği Oluşturan Kişi')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ActiveGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificationDate', models.DateTimeField(auto_now=True, null=True)),
                ('kobilid', models.IntegerField(blank=True, default=1, null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='auth.group', verbose_name='aktivGroup')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='aktivUser')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
